将概念数据库模式转化成逻辑数据库模式：
	形成初始的关系数据库模式：
		普通实体：
			ER图中的主键即为关系模式T的主键
			ER图中的简单属性即为T的属性
			ER图中的复合属性的子属性即为T的属性
		弱实体
			识别实体集的主键也在T中
			弱实体的简单属性和复合属性的子属性为T的属性
			弱实体的部分键和识别实体的主键构成T的主键
		多值属性
			为多值属性构造关系T
			如果多值属性是简单属性，T包含多值属性对应关系的主键和该多值属性
			主键为关系上的主键和多值属性
			如果多值属性是复合属性，则T包含该复合属性的子属性和对应关系上的主键
			子属性和对应关系上的主键即为T的主键
		联系集
			为联系集设计关系模式T
			1：1
				两种方法
			1：n
				两种方法
			n：m
				一种方法
			多元联系：
				类似多对多（—没有特别之处）
		
		设定函数依赖
		
	函数依赖和关系模式规范化
		函数依赖：
			对R上的属性集U，若A属于U，B属于U，对任意实例t1,t2,若t1(A)=t2(A)
			则t1(B)=t2(B)则称B函数依赖于A，即A->B
			（注意A,B都是集合）
			类型：
				平凡函数依赖
					B属于A（B是A的子集），A->B
				非平凡函数依赖
				部分函数依赖
					A->B,C是A的子集C->B，则称B部分函数依赖于A
				完全函数依赖
					A->B，对任意C属于B，C->B不成立
				传递函数依赖
					A->B,B->C则C传递函数依赖于A
				非传递函数依赖
			函数依赖的公理系统：
				Amstrong公理系统：
					1、B属于A属于U，则A->B
					2、A->B,对任意的W属于U，AW->BW(WA->WB)
					3、A->B,B->C则A->C
					推广：
						A->B,BW->C,则WA->C
			闭包
				函数依赖集的闭包
					对所有逻辑蕴含与F的函数依赖组成的集合成为F的闭包，即F+
				属性集在函数F上的闭包
					
				通过闭包计算候选式
					属性集A在F上的闭包=U，则A是候选式
				属性分类（快速计算闭包）
					L类属性
					R类属性
					N类属性
					LR类属性
				快速计算闭包
					L类属性一定在任意一个候选键中
					N类属性一定在任意一个候选键中
					R类属性一定不在任何一个候选键中
					推论
						若一个候选式只包含L类和N类属性则这个候选键是唯一候选键
			最小函数依赖集
				每个函数依赖的右部只包含一个属性（非必须，可以通过公理系统得到）
				对任意函数依赖A->B,F-(A->B)与F不相同
				对函数依赖A->B,对A的任何子集Z，F-(A->B)+(Z->B)与F不相同
				（这个+是并的意思嗷）
				注意：最小函数依赖不唯一
				作用
					求具有无损连接性和函数依赖保持性的3NF范式
		
		关系模式规范化
			1NF
				每一个属性的值域都是不可分的简单数值集
			2NF
				每一个非键属性都完全函数依赖于候选码
			3NF
				每个非键属性都不传递函数依赖于候选码
			BCNF
				对A->B，A是候选码
				或者：
					每个非键属性都完全函数依赖于每一个候选码
					每个键属性都完全函数依赖于不包含这个键属性的候选码
					每个非键属性都不完全函数依赖于非候选码
			关系分解要求
				无损连接性
					R分解成R1,R2,...Rn，对应属性集U分解成U1,U2,...Un，则R1,R2,...,Rn的自然连接=R
				函数依赖保持性
					R分解成R1,R2,...Rn，对应函数依赖F被分解成F1,F2,...,Fn,则Fi的并=F+，
					Fi的并包含于F+，F包含于Fi的并的闭包
					前者显然成立，所以只需证后者
				无损连接性和函数依赖保持性
			判断是否为无损连接：2种方法
				R(A,B,C) R1(AB) R2(C)
				画矩阵
							A	B	C
					AB		a1	a2	b13
					C		b21	b22	a3
				若仅分解成两个关系，R分解为R1,R2对应属性U分解为U1,U2，则
				U1交U2->(U1-U2)属于F+，或U1交U2->(U2-U1)属于F+,则该分解具有无损连接性
					
			判断是否为函数依赖保持
				见函数依赖保持性定义
			构造无损连接和函数依赖保持的3NF算法
				对关系R，属性集U，函数F
				计算最小函数依赖集Fm
				初始化p=null
				对每一个A->B属于Fm
				if A并B不属于p
					p=p+(A并B)
				若R的候选键S不在P的任何一个元素中，
					则p=p+S（p={{A},{B},{C}}=>p={{A},{B},{C},{S}}）
			构造无损连接的BCNF算法
				初始化t={R}
				对t中每一个元素R'，
				若R'不满足BCNF，R'有函数依赖A->B（也可能有多个函数依赖，先
				去一个，之后循环继续去除）
				去掉AB后R'满足BCNF，则删除t中的R'，加入R'-{B}和{AB}
	关系模式优化
		垂直分解
		水平分解

	定义关系上的完整性和安全性约束
		完整性约束
			属性上的完整性约束
			不同属性间的完整性约束
			不同关系模式间的完整性约束
		安全性约束
			属性上的安全性约束
			关系模式上的安全性约束

	子模式定义
		通过视图定义外模式

	性能评估（3个公式，没看懂）
	
	R(A,B,C)F{A->B A->C B->A C->A}，那BC是候选键吗